substitutions:
  name: esp-kyo-alarm
  friendly_name: "ESP KYO Alarm"
  
esphome:
  name: ${name}
  platform: ESP8266
  board: d1_mini_pro
  comment: "ESP KYO alarm integration"
  libraries:
    - "td-er/RABurton ESP8266 Mutex @ ^1.0.2"
  includes:
    - kyo-alarm/

# Global values
globals:
  # Arm home partitions (bitfield) as configured in alarm
  - id: armed_home
    type: uint8_t
    restore_value: no
    initial_value: '0x79'
  # Arm away partitions (bitfield) as configured in alarm
  - id: armed_away
    type: uint8_t
    restore_value: no
    initial_value: '0x7F'


# Enable logging
logger:
  level: VERBOSE
  baud_rate: 9600
  
# Enable Home Assistant API
api:
  password: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiI0NTcwMGUzZWFmMzY0ZjJjOWY0ODUyZmY2N2ZjZTRiMCIsImlhdCI6MTY0ODgyMzgxNywiZXhwIjoxOTY0MTgzODE3fQ.BSyzrxk52kFDt_8QbTXesUXdZwFNCfpK6_UB_awgKDc"

ota:
  password: "d365c91e4f3c7987bd7a5e82baf7d680"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp-Kyo-Alarm Fallback Hotspot"
    password: "m7x57GpCKOik"

# Reference time
time:
  - platform: homeassistant
    id: ha_time
    timezone: Europe/Rome
    on_time_sync:
      then:
        lambda: |-
          KyoAlarmComponent* k = (KyoAlarmComponent*) kyo;
          k->onTimeSync(id(ha_time).now());

# Configure UART link to KYO alarm
uart:
  id: uart_bus
  tx_pin: GPIO5
  rx_pin: GPIO4
  baud_rate: 9600
  data_bits: 8
  parity: EVEN

# Restart buttons
button:
  - platform: restart
    name: "${friendly_name} Restart"
  - platform: safe_mode
    name: "${friendly_name} Restart (Safe Mode)"
    disabled_by_default: true

# Custom Kyo component
custom_component:
  - lambda: |-
      auto kyo = new KyoAlarmComponent(id(uart_bus));
      App.register_component(kyo);
      return {kyo};
    components:
      - id: kyo
# Text sensors
text_sensor:
  # Alarm status
  - platform: custom
    lambda: |-
      KyoAlarmComponent* k = (KyoAlarmComponent*) kyo;
      return {k->alarmStatusSensor};
    text_sensors:
      - id: kyo_alarm_status
        name: "Alarm Status"
        icon: "mdi:shield"
  # Model and firmware version
  - platform: custom
    lambda: |-
      KyoAlarmComponent* k = (KyoAlarmComponent*) kyo;
      return {k->modelSensor, k->firmwareSensor};
    text_sensors:
      - id: kyo_model
        name: "Model"
        icon: "mdi:shield-home"
        entity_category: "diagnostic"
      - id: kyo_firmware
        name: "Firmware"
        icon: "mdi:memory"
        entity_category: "diagnostic"

# Generic sensors
sensor:
  # Warning and tamper flags (used internally)
  - platform: custom
    lambda: |-
      KyoAlarmComponent* k = (KyoAlarmComponent*) kyo;
      return {k->warningSensor, k->tamperSensor};
    sensors:
      - id: kyo_warning
        name: "Warning flags"
        internal: true
      - id: kyo_tamper
        name: "Tamper flags"
        internal: true

# Binary sensors
binary_sensor:
  # Zones status
  - platform: custom
    lambda: |-
      KyoAlarmComponent* k = (KyoAlarmComponent*) kyo;
      return {&k->zoneSensor[0], &k->zoneSensor[1],
              &k->zoneSensor[2], &k->zoneSensor[3],
              &k->zoneSensor[4], &k->zoneSensor[5],
              &k->zoneSensor[6], &k->zoneSensor[7],
              &k->zoneSensor[8], &k->zoneSensor[9],
              &k->zoneSensor[10]};
    binary_sensors:
      - id: kyo_zone1
        name: "Ingresso"
        device_class: "door"
      - id: kyo_zone2
        name: "Radar Sala"
        device_class: "motion"
      - id: kyo_zone3
        name: "Radar Garage"
        device_class: "motion"
      - id: kyo_zone4
        name: "Finestra Cucina"
        device_class: "window"
      - id: kyo_zone5
        name: "Finestra Bagno"
        device_class: "window"
      - id: kyo_zone6
        name: "Finestra Cameretta"
        device_class: "window"
      - id: kyo_zone7
        name: "Finestra Matrimoniale"
        device_class: "window"
      - id: kyo_zone8
        name: "Finestra Sala"
        device_class: "window"
      - id: kyo_zone9
        name: "Ripetitore"
        device_class: "motion"
      - id: kyo_zone10
        name: "Esterno Dietro"
        device_class: "motion"
      - id: kyo_zone11
        name: "Esterno Avanti"
        device_class: "motion"

  # Warnings
  # 00000001 - Mains failure
  # 00000010 - Missing BPI
  # 00000100 - Fuse warning
  # 00001000 - Low battery
  # 00010000 - Telephone line
  # 00100000 - Default code
  # 01000000 - Wireless warning
  - platform: template
    id: kyo_warn_mains
    name: "Mains failure"
    device_class: "problem"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_warning).state) & 0x01) > 0);
  - platform: template
    id: kyo_warn_bpi
    name: "Missing BPI"
    device_class: "problem"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_warning).state) & 0x02) > 0);
  - platform: template
    id: kyo_warn_fuse
    name: "Fuse warning"
    device_class: "problem"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_warning).state) & 0x04) > 0);
  - platform: template
    id: kyo_warn_batt
    name: "Low battery"
    device_class: "problem"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_warning).state) & 0x08) > 0);
  - platform: template
    id: kyo_warn_phone
    name: "Telephone line"
    device_class: "problem"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_warning).state) & 0x10) > 0);
  - platform: template
    id: kyo_warn_code
    name: "Default code"
    device_class: "problem"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_warning).state) & 0x20) > 0);
  - platform: template
    id: kyo_warn_wireless
    name: "Wireless warning"
    device_class: "problem"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_warning).state) & 0x40) > 0);
  # Tampers
  # 00000100 - Zone tamper
  # 00001000 - False key
  # 00010000 - BPI tamper
  # 00100000 - System tamper
  # 01000000 - Jam
  # 10000000 - Wireless tamper
  - platform: template
    id: kyo_tamp_zone
    name: "Zone tamper"
    device_class: "tamper"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_tamper).state) & 0x04) > 0);
  - platform: template
    id: kyo_tamp_key
    name: "False key"
    device_class: "tamper"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_tamper).state) & 0x08) > 0);
  - platform: template
    id: kyo_tamp_bpi
    name: "BPI tamper"
    device_class: "tamper"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_tamper).state) & 0x10) > 0);
  - platform: template
    id: kyo_tamp_sys
    name: "System tamper"
    device_class: "tamper"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_tamper).state) & 0x20) > 0);
  - platform: template
    id: kyo_tamp_jam
    name: "Jam"
    device_class: "tamper"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_tamper).state) & 0x40) > 0);
  - platform: template
    id: kyo_tamp_wireless
    name: "Wireless tamper"
    device_class: "tamper"
    lambda: |-
      return((static_cast<uint8_t>(id(kyo_tamper).state) & 0x80) > 0);
# Switches
switch:
# Zones bypass switch
- platform: custom
  id: zoneSwitches
  lambda: |-
    for(int i = 0; i < 32; i++) {
        auto s = new KyoZoneSwitch(i);
        App.register_component(s);
        ((KyoAlarmComponent*) kyo)->zoneSwitches.push_back(s);
    }
    return {((KyoAlarmComponent*) kyo)->zoneSwitches};
  switches:
    - id: kyo_zone1_sw
      name: "Ingresso"
      icon: "mdi:leak"
      entity_category: "config"
      inverted: true
    - id: kyo_zone2_sw
      name: "Radar Sala"
      icon: "mdi:motion-sensor"
      entity_category: "config"
      inverted: true
    - id: kyo_zone3_sw
      name: "Radar Garage"
      icon: "mdi:motion-sensor"
      entity_category: "config"
      inverted: true
    - id: kyo_zone4_sw
      name: "Finestra Cucina"
      icon: "mdi:leak"
      entity_category: "config"
      inverted: true
    - id: kyo_zone5_sw
      name: "Finestra Bagno"
      icon: "mdi:leak"
      entity_category: "config"
      inverted: true
    - id: kyo_zone6_sw
      name: "Finestra Cameretta"
      icon: "mdi:leak"
      entity_category: "config"
      inverted: true
    - id: kyo_zone7_sw
      name: "Finestra Matrimoniale"
      icon: "mdi:leak"
      entity_category: "config"
      inverted: true
    - id: kyo_zone8_sw
      name: "Finestra sala"
      icon: "mdi:leak"
      entity_category: "config"
      inverted: true
    - id: kyo_zone9_sw
      name: "Ripetitore"
      icon: "mdi:leak"
      entity_category: "config"
      inverted: true
    - id: kyo_zone10_sw
      name: "Esterno Dietro"
      icon: "mdi:motion-sensor"
      entity_category: "config"
      inverted: true
    - id: kyo_zone11_sw
      name: "Esterno Avanti"
      icon: "mdi:motion-sensor"
      entity_category: "config"
      inverted: true
